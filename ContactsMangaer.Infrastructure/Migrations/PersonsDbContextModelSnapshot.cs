// <auto-generated />
using System;
using Enities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ContactsMangaer.Infrastructure.Migrations
{
    [DbContext(typeof(PersonsDbContext))]
    partial class PersonsDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Enities.Country", b =>
                {
                    b.Property<Guid>("CountryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CountryName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CountryId");

                    b.ToTable("Countries", (string)null);

                    b.HasData(
                        new
                        {
                            CountryId = new Guid("123e4567-e89b-12d3-a456-426614174000"),
                            CountryName = "United States"
                        },
                        new
                        {
                            CountryId = new Guid("223e4567-e89b-12d3-a456-426614174001"),
                            CountryName = "United Kingdom"
                        },
                        new
                        {
                            CountryId = new Guid("323e4567-e89b-12d3-a456-426614174002"),
                            CountryName = "Canada"
                        },
                        new
                        {
                            CountryId = new Guid("423e4567-e89b-12d3-a456-426614174003"),
                            CountryName = "Australia"
                        },
                        new
                        {
                            CountryId = new Guid("523e4567-e89b-12d3-a456-426614174004"),
                            CountryName = "Germany"
                        },
                        new
                        {
                            CountryId = new Guid("623e4567-e89b-12d3-a456-426614174005"),
                            CountryName = "Japan"
                        },
                        new
                        {
                            CountryId = new Guid("723e4567-e89b-12d3-a456-426614174006"),
                            CountryName = "France"
                        },
                        new
                        {
                            CountryId = new Guid("823e4567-e89b-12d3-a456-426614174007"),
                            CountryName = "Spain"
                        },
                        new
                        {
                            CountryId = new Guid("923e4567-e89b-12d3-a456-426614174008"),
                            CountryName = "Italy"
                        },
                        new
                        {
                            CountryId = new Guid("a23e4567-e89b-12d3-a456-426614174009"),
                            CountryName = "Russia"
                        });
                });

            modelBuilder.Entity("Enities.Person", b =>
                {
                    b.Property<Guid>("PersonID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<Guid?>("CountryID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Gender")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("PersonName")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<bool>("ReceiveNewsLetters")
                        .HasColumnType("bit");

                    b.HasKey("PersonID");

                    b.HasIndex("CountryID");

                    b.ToTable("Persons", (string)null);

                    b.HasData(
                        new
                        {
                            PersonID = new Guid("550e8400-e29b-41d4-a716-446655440000"),
                            Address = "123 Main Street, New York, USA",
                            CountryID = new Guid("123e4567-e89b-12d3-a456-426614174000"),
                            DateOfBirth = new DateTime(1995, 5, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "johndoe@example.com",
                            Gender = "Male",
                            PersonName = "John Doe",
                            ReceiveNewsLetters = true
                        },
                        new
                        {
                            PersonID = new Guid("550e8400-e29b-41d4-a716-446655440001"),
                            Address = "456 Oak Avenue, London, UK",
                            CountryID = new Guid("223e4567-e89b-12d3-a456-426614174001"),
                            DateOfBirth = new DateTime(1998, 9, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "janesmith@example.com",
                            Gender = "Female",
                            PersonName = "Jane Smith",
                            ReceiveNewsLetters = false
                        },
                        new
                        {
                            PersonID = new Guid("550e8400-e29b-41d4-a716-446655440002"),
                            Address = "789 Pine Street, Toronto, Canada",
                            CountryID = new Guid("323e4567-e89b-12d3-a456-426614174002"),
                            DateOfBirth = new DateTime(1987, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "alicej@example.com",
                            Gender = "Female",
                            PersonName = "Alice Johnson",
                            ReceiveNewsLetters = true
                        },
                        new
                        {
                            PersonID = new Guid("550e8400-e29b-41d4-a716-446655440003"),
                            Address = "147 Maple Drive, Sydney, Australia",
                            CountryID = new Guid("423e4567-e89b-12d3-a456-426614174003"),
                            DateOfBirth = new DateTime(1992, 11, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "robertb@example.com",
                            Gender = "Male",
                            PersonName = "Robert Brown",
                            ReceiveNewsLetters = false
                        },
                        new
                        {
                            PersonID = new Guid("550e8400-e29b-41d4-a716-446655440004"),
                            Address = "963 Birch Lane, Berlin, Germany",
                            CountryID = new Guid("523e4567-e89b-12d3-a456-426614174004"),
                            DateOfBirth = new DateTime(1990, 7, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "emmaw@example.com",
                            Gender = "Female",
                            PersonName = "Emma Wilson",
                            ReceiveNewsLetters = true
                        },
                        new
                        {
                            PersonID = new Guid("550e8400-e29b-41d4-a716-446655440005"),
                            Address = "852 Elm Street, Tokyo, Japan",
                            CountryID = new Guid("623e4567-e89b-12d3-a456-426614174005"),
                            DateOfBirth = new DateTime(1985, 6, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "danle@example.com",
                            Gender = "Male",
                            PersonName = "Daniel Lee",
                            ReceiveNewsLetters = false
                        },
                        new
                        {
                            PersonID = new Guid("550e8400-e29b-41d4-a716-446655440006"),
                            Address = "357 Cedar Avenue, Paris, France",
                            CountryID = new Guid("723e4567-e89b-12d3-a456-426614174006"),
                            DateOfBirth = new DateTime(2000, 1, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "sophiam@example.com",
                            Gender = "Female",
                            PersonName = "Sophia Martinez",
                            ReceiveNewsLetters = true
                        },
                        new
                        {
                            PersonID = new Guid("550e8400-e29b-41d4-a716-446655440007"),
                            Address = "159 Willow Road, Madrid, Spain",
                            CountryID = new Guid("823e4567-e89b-12d3-a456-426614174007"),
                            DateOfBirth = new DateTime(1983, 9, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "williamt@example.com",
                            Gender = "Male",
                            PersonName = "William Taylor",
                            ReceiveNewsLetters = false
                        },
                        new
                        {
                            PersonID = new Guid("550e8400-e29b-41d4-a716-446655440008"),
                            Address = "951 Spruce Boulevard, Rome, Italy",
                            CountryID = new Guid("923e4567-e89b-12d3-a456-426614174008"),
                            DateOfBirth = new DateTime(1997, 4, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "oliviah@example.com",
                            Gender = "Female",
                            PersonName = "Olivia Hernandez",
                            ReceiveNewsLetters = true
                        },
                        new
                        {
                            PersonID = new Guid("550e8400-e29b-41d4-a716-446655440009"),
                            Address = "753 Redwood Street, Moscow, Russia",
                            CountryID = new Guid("a23e4567-e89b-12d3-a456-426614174009"),
                            DateOfBirth = new DateTime(1994, 2, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "jamesa@example.com",
                            Gender = "Male",
                            PersonName = "James Anderson",
                            ReceiveNewsLetters = false
                        });
                });

            modelBuilder.Entity("Enities.Person", b =>
                {
                    b.HasOne("Enities.Country", "Country")
                        .WithMany("Persons")
                        .HasForeignKey("CountryID");

                    b.Navigation("Country");
                });

            modelBuilder.Entity("Enities.Country", b =>
                {
                    b.Navigation("Persons");
                });
#pragma warning restore 612, 618
        }
    }
}
