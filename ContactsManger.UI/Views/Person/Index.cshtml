@model IEnumerable<PersonResponse>

@{
    ViewBag.Title = "Persons";
}
<form  asp-controller="Person"  asp-action="Index"  method="get">
<div class="col-md-12">
    <div class="row">
        <div class="col-4">
            <div class="card mb-4">
                <div class="card-body">
                    <div class="form-floating form-floating-outline">
                        <select class="form-select" id="floatingSelect" aria-label="Floating label select example" name="searchBy">
                            @foreach (var field in ViewBag.SearchFields)
                            {
                                if (field.Key == ViewBag.CurrentSearchBy)
                                {
                                    <option value="@field.Key" selected="selected">@field.Value</option>
                                }
                                else
                                {
                                    <option value="@field.Key">@field.Value</option>
                                }
                            }
                        </select>
                        <label for="floatingSelect">Works with selects</label>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-5">
            <div class="card mb-4">
                <div class="card-body">
                    <div class="form-floating form-floating-outline">
                        <input type="text"
                               class="form-control"
                               id="floatingInput"
                               placeholder="Search"
                               aria-describedby="floatingInputHelp"
                               value="@ViewBag.CurrentSearchString"
                               name="searchString" />
                        <label for="floatingInput">Search</label>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-3">
            <div class="card mb-4">
                <div class="card-body" id="btnf">
                    <div class="row">
                        <div class="col-6">
                            <button type="submit" class="btn btn-primary">Submit</button>
                        </div>
                        <div class="col-6">
                            <button type="reset" class="btn btn-danger waves-effect waves-light">Reset</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="card">
    @* <h5 class="card-header">Dark Table head</h5> *@
    <div class="table-responsive text-nowrap">
      
        <table class="table table-striped table-bordered table-hover table-fixed">
            <thead>
                <tr>
                    @await Html.PartialAsync("_GridColumnHeader", new ViewDataDictionary(ViewData){
                        {"ColumnName",nameof(PersonResponse.PersonName)},
                        {"DisplayName","Person Name"},
                    })
                    @await Html.PartialAsync("_GridColumnHeader", new ViewDataDictionary(ViewData){
                        {"ColumnName",nameof(PersonResponse.Email)},
                        {"DisplayName","Email"},
                    })
                    @await Html.PartialAsync("_GridColumnHeader", new ViewDataDictionary(ViewData){
                        {"ColumnName",nameof(PersonResponse.DateOfBirth)},
                        {"DisplayName","Date Of Birth"},
                    })
                    @await Html.PartialAsync("_GridColumnHeader", new ViewDataDictionary(ViewData){
                        {"ColumnName",nameof(PersonResponse.Age)},
                        {"DisplayName","Age"},
                    })
                    @await Html.PartialAsync("_GridColumnHeader", new ViewDataDictionary(ViewData){
                        {"ColumnName",nameof(PersonResponse.Gender)},
                        {"DisplayName","Gender"},
                    })
                    @await Html.PartialAsync("_GridColumnHeader", new ViewDataDictionary(ViewData){
                        {"ColumnName",nameof(PersonResponse.Country)},
                        {"DisplayName","Country"},
                    })
                    @await Html.PartialAsync("_GridColumnHeader", new ViewDataDictionary(ViewData){
                        {"ColumnName",nameof(PersonResponse.Address)},
                        {"DisplayName","Address"},
                    })
                    <th style="width: 10%; white-space: nowrap; text-align: center;">Receive Letters</th>
                    <th style="width: 10%; white-space: nowrap; text-align: center;">Actions</th>
                </tr>
            </thead>
            <tbody class="table-border-bottom-0">
                @foreach (PersonResponse person in Model)
                {
                    <tr>
                        <td><strong>@person.PersonName</strong></td>
                        <td style="width: 15%;">@person.Email</td>
                        <td style="width: 10%;">@person.DateOfBirth?.ToString("dd MMM yyyy")</td>
                        <td style="width: 5%;">@person.Age</td>
                        <td style="width: 8%;">@person.Gender</td>
                        <td style="width: 10%;">@person.Country</td>
                        <td style="width: 20%;">@person.Address</td>
                        <td style="text-align: center;">
                            @if (person.ReceiveNewsLetters != null && bool.TryParse(person.ReceiveNewsLetters.ToString(), out bool isSubscribed) && isSubscribed)
                            {
                                <span class="badge bg-label-success me-1">Yes</span>
                            }
                            else
                            {
                                <span class="badge bg-label-danger me-1">No</span>
                            }
                        </td>
                            <td style="text-align: center;">
                                <div class="d-flex justify-content-center">
                                    <a asp-controller="Person" asp-action="Edit" asp-route-personId="@person.PersonId"
                                       class="btn btn-sm btn-text-secondary rounded-pill btn-icon item-edit waves-effect waves-light me-2">
                                        <i class="mdi mdi-pencil-outline"></i>
                                    </a>@*/person/edit/ID*@
                                    <a asp-controller="Person" asp-action="Delete" asp-route-personId="@person.PersonId" class="btn btn-sm btn-text-secondary rounded-pill btn-icon item-edit waves-effect waves-light">
                                        <i class="mdi mdi-trash-can-outline"></i>@*/person/Delete/ID*@
                                    </a>
                                </div>
                            </td>

                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>
    <style>
        .table-fixed {
            table-layout: fixed;
            width: 100%;
        }

            .table-fixed thead th {
                white-space: nowrap;
                text-align: center;
                vertical-align: middle;
            }

            .table-fixed tbody td {
                word-wrap: break-word;
                text-align: center;
                vertical-align: middle;
            }

            .table-fixed th, .table-fixed td {
                padding: 10px;
                text-overflow: ellipsis;
                overflow: hidden;
            }

                /* Define specific widths */
                .table-fixed th:nth-child(1),
                .table-fixed td:nth-child(1) {
                    width: 15%;
                }
                /* Person Name */
                .table-fixed th:nth-child(2),
                .table-fixed td:nth-child(2) {
                    width: 15%;
                }
                /* Email */
                .table-fixed th:nth-child(3),
                .table-fixed td:nth-child(3) {
                    width: 10%;
                }
                /* Date of Birth */
                .table-fixed th:nth-child(4),
                .table-fixed td:nth-child(4) {
                    width: 5%;
                }
                /* Age */
                .table-fixed th:nth-child(5),
                .table-fixed td:nth-child(5) {
                    width: 8%;
                }
                /* Gender */
                .table-fixed th:nth-child(6),
                .table-fixed td:nth-child(6) {
                    width: 10%;
                }
                /* Country */
                .table-fixed th:nth-child(7),
                .table-fixed td:nth-child(7) {
                    width: 20%;
                }
                /* Address */
                .table-fixed th:nth-child(8),
                .table-fixed td:nth-child(8) {
                    width: 8%;
                    text-align: center;
                }
                /* Receive Letters */
                .table-fixed th:nth-child(9),
                .table-fixed td:nth-child(9) {
                    width: 9%;
                    text-align: center;
                }
        /* Actions */
    </style>

</form>
